#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

setxkbmap -option ctrl:swapcaps

# Customize to your needs...

export TERM="xterm-256color"
stty -ixon

# aliases
alias setclip='xclip -selection c'
alias getclip='xclip -selection clipboard -o'

# helpers

set_dark() {
  ~/vimrc/gnome-terminal-colors-solarized/install.sh -s dark -p :b1dcc9dd-5262-4d8d-a863-c897e6d979b9
  echo 'call SetDarkBg()' >! ~/.vimbackground
}

set_light() {
  ~/vimrc/gnome-terminal-colors-solarized/install.sh -s light -p :b1dcc9dd-5262-4d8d-a863-c897e6d979b9
  echo 'call SetLightBg()' >! ~/.vimbackground
}


[[ -s "/home/joseph/.gvm/scripts/gvm" ]] && source "/home/joseph/.gvm/scripts/gvm"

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
source $HOME/.solanodevrc

setup_begot_gopath() {
    cd ~/solanolabs/tddium_system/build_agent && export GOPATH=$GOPATH:`begot gopath`
    cd ~/.cache/begot/wk/d4a82177/src/
}

vget() {
  [ $# -eq 0 ] && echo 'Usage:\n\t vget <git_repo_clone_url> [git_ref]'
  a=$1
  p=vendor/${a:8}
  if [ ! -d $p ] || [ ! -d "$p/.git" ]; then
    echo 'Clone...'
    rm -rf $p > /dev/null 2>&1
    git clone $a $p > /dev/null 2>&1
  fi
  _pwd=`pwd`
  if [ $# -eq 2 ]; then
    echo "Check out $2"
    cd $p && git checkout $2 > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      echo "git checkout FAILED. Rerun vget with correct git ref or go to $p, checkout manually and delete .git"
      cd $_pwd
      return 1
    fi
  fi
  cd $_pwd
  echo 'Remove .git'
  rm -rf "$p/.git"
  echo 'Done.'
}

[[ -s ~/.solanodevrc ]] && source ~/.solanodevrc
source /home/joseph/vimrc/zaw/zaw.zsh
alias gop="hsandbox go"

eval "$(direnv hook zsh)"

batlife() {
    upower -i /org/freedesktop/UPower/devices/battery_BAT0
}

set_wacom_output() {
    $o=eDP1
    if [ $# -eq 1 ]; then
        $o=$1
    fi
    xsetwacom --set "Wacom Bamboo Connect Pen stylus" MapToOutput $o
}



